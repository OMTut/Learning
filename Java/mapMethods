//takes a Map<String, String> and checks if the keys point to all unique values
public boolean isUnique(Map<String,String>startingMap) {
    //create a Set for keys (Sets do not allow duplicates)
    Set<String> keyCount = startingMap.keySet();
    int keySize = keyCount.size();
    
    //create a Set for values
    Set<String> valueSet = new HashSet<String> (startingMap.values());
    int valueSize = valueSet.size();
    
    return (keySize == valueSize);
}

/*
*  This takes two Maps and find their intersection.
*  1. Checks to see if MapB contains the key from Map A
*  2. if it does, it compares the values of MapB key to MapA key
*  3. If they're equal, it puts it into result map and returs
*/
public Map<String, Integer> intersect(Map<String, Integer> mapA, Map<String, Integer> mapB) {
    
    Map<String, Integer> result = new HashMap<>();
    
    for (String x : mapA.keySet()) {
        if ((mapB.containsKey(x)) && (mapA.get(x).equals(mapB.get(x)))) {
            result.put(x,mapA.get(x));
        }
    }
    
    return result;
}
